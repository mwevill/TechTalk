stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    continueOnError: true
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      ResourceGroup: 'mwtestrg'
      skuName: 'B1'
      skuCapacity: '1'
      sqlAdministratorLogin: 'superSecureLogin'
      sqlAdministratorLoginPassword: 'P455W0rd1234'
    steps:
    - task: NuGetToolInstaller@0

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: code'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: Demo

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        Contents: |
          azure\**
          src\**\*.dacpac
      TargetFolder: '$(build.artifactstagingdirectory)/publish'
      OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/publish'

- stage: Deploy
  jobs:
  # track deployments on the environment
  - deployment: DeployWeb
    pool:
      vmImage: 'windows-latest'
  # creates an environment if it doesnâ€™t exist
    variables:
      ResourceGroup: 'mwtestrg'
      skuName: 'B1'
      skuCapacity: '1'
      sqlAdministratorLogin: 'superSecureLogin'
      sqlAdministratorLoginPassword: 'P455W0rd1234'
    environment: 'AcceptanceTest'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment
          - task: AzureResourceGroupDeployment@2
            displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroup)'
            inputs:
              azureSubscription: 'VSTS'
              resourceGroupName: $(ResourceGroup)
              location: 'West Europe'
              csmFile: '$(System.DefaultWorkingDirectory)/Azure/template.json'
              overrideParameters: -skuName "$(skuName)" -skuCapacity "$(skuCapacity)" -sqlAdministratorLogin "$(sqlAdministratorLogin)" -sqlAdministratorLoginPassword "$(sqlAdministratorLoginPassword)" -location "$(location)"
              deploymentOutputs: armoutputs

 